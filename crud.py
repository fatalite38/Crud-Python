# -*- coding: utf-8 -*-
"""CRUD.ipynb

Automatically generated by Colaboratory.


CRUD - Luiz Fernando Pedrozo
"""

#Instalar o Mysql
!apt-get install mysql-server > /dev/null

#Iniciar o serviço mysql
!service mysql start

#Alterar a senha do root
!mysql -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '1210' "

!mysql -h localhost -u root -p

#instalação do pacote de conexão do python no mysql
!pip install mysql-connector-python

#Importação do pacote de conexão
import mysql.connector
from mysql.connector import Error

#Cria o objeto de conexão
conexao = mysql.connector.connect(host='localhost', database='crud', user='root', password='1210')

#Testar se o banco está conectado
if conexao.is_connected():
  db_info = conexao.get_server_info()
  print('Conectado ao servidor MySQL Versão', db_info)
  cursor = conexao.cursor()

#Testa a conexao, se estiver ativa, desconecta do banco
if conexao.is_connected():
  cursor.close()
  conexao.close()
  print('Conexao MySQL foi encerrada!')

#Create(INSERT)
email = ""
senha = ""
nome = ""
idade =
comando = f"INSERT INTO usuarios (email,senha,nome,idade) VALUES('{email}', '{senha}', '{nome}', {idade})"
cursor.execute(comando)
conexao.commit()

#Create(INSERT)
email = ""
senha = ""
nome = ""
idade =
comando = f"INSERT INTO usuarios (email,senha,nome,idade) VALUES('{email}', '{senha}', '{nome}', {idade})"
cursor.execute(comando)
conexao.commit()

#Create(INSERT)
email = ""
senha = ""
nome = ""
idade =
comando = f"INSERT INTO usuarios (email,senha,nome,idade) VALUES('{email}', '{senha}', '{nome}', {idade})"
cursor.execute(comando)
conexao.commit()

#Create(INSERT) - insert com o .format
email = ""
senha = ""
nome = ""
idade =
comando = "INSERT INTO usuarios (email,senha,nome,idade) VALUES('{}', '{}', '{}', {})".format(email,senha,nome,idade)
cursor.execute(comando)
conexao.commit()

#SELECT de todos os registros
comando = "SELECT * FROM usuarios"
cursor.execute(comando)
linhas = cursor.fetchall()
for linha in linhas:
  print(linha)

#Select de apenas 1 registro
id =
comando = "SELECT * FROM usuarios WHERE id_user = {}".format(id)
cursor.execute(comando)
linha = cursor.fetchone()
print(linha)

#Update -- alterar um registro
senha = ""
idade =
id =
comando = "UPDATE usuarios SET senha = '{}', idade = {} WHERE id_user = {}".format(senha,idade,id)
cursor.execute(comando)
conexao.commit()

#Delete um registro
id =
comando = "DELETE FROM usuarios where id_user = {}".format(id)
cursor.execute(comando)
conexao.commit()

"""# **Login e senha com python**



"""

#criando uma classe
class Crud(object):
  __host = 'localhost'
  __database = 'crud'
  __user = 'root'
  __password = '1210'

  def __init__(self):
    '''Método Construtor '''

  def conectarBanco(self):
    '''Método de conexao com o BD'''
    self.conexao = mysql.connector.connect(host= self.__host, database= self.__database, user= self.__user, password= self.__password)
    if self.conexao.is_connected():
      db_info = self.conexao.get_server_info()
      print('Conectado ao servidor MySQL Versão', db_info)
      self.cursor = self.conexao.cursor()
  
  def desconectarBanco(self):
    '''Método de desconexão com o BD '''
    self.conexao = mysql.connector.connect(host= self.__host, database= self.__database, user= self.__user, password= self.__password)
    if self.conexao.is_connected():
       cursor.close()
       conexao.close()
       print('Conexão MySQL foi encerrada!')
  
  def inserirDados(self):
    '''Método de inserir dados no BD '''
    email = input("Digite o email: ")
    nome = input("Digite o nome: ")
    idade = input("Digite a idade: ")
    senha = input("Crie uma senha: ")
    comando = "INSERT INTO usuarios (email,senha,nome,idade) VALUES('{}', '{}', '{}', {})".format(email,senha,nome,idade)
    self.cursor.execute(comando)
    self.conexao.commit()

 
  def selecionarDados(self):
    '''Método de selecionar dados no BD '''
    comando = "SELECT * FROM usuarios"
    self.cursor.execute(comando)
    linhas = self.cursor.fetchall()
    for linha in linhas:
      print(linha)
  
  def selecionarApenasUmDado(self, id):
    '''Método de selecionar apenas um dado no BD '''
    comando = "SELECT * FROM usuarios WHERE id_user = {}".format(id)
    self.cursor.execute(comando)
    linha = self.cursor.fetchone()
    print(linha)

  def alterarDados(self,email, senha, nome, idade, id):
    '''Método de alterar dados no BD '''
    
    email= input("Digite o novo email: ")
    senha= input("Digite a nova senha: ")
    nome = input("Digite o novo nome: ")
    idade = input("Digite a nova idade: ")
    id = input("Entre com o Id do usuário: ")
    comando = "UPDATE usuarios SET email = '{}', senha = '{}' , nome = '{}' , idade = {} WHERE id_user = {} ".format(email,senha,nome,idade,id)
    self.cursor.execute(comando)
    self.conexao.commit()
    print("alteração realizada!")
  
  def deletarDados(self, id):
    '''Método de deletar dados no BD '''
    comando = "DELETE FROM usuarios WHERE id_user = {}".format(id)
    self.cursor.execute(comando)
    self.conexao.commit()

  def loginUsuario(self):
    email = input("Digite seu email: ")
    senha = input("Digite sua senha: ")
    comando = "SELECT * FROM usuarios WHERE email = '{}' AND senha = '{}'".format(email, senha)
    self.cursor.execute(comando)
    login = self.cursor.fetchone()
    if login:
      print("Logado no sistema")
    else:
      print("Email ou senha incorreto!")

db = Crud()

db.conectarBanco()

db.inserirDados()

db.selecionarDados()

db.selecionarApenasUmDado()

db.alterarDados()

db.loginUsuario()

db.deletarDados()

db.desconectarBanco()
